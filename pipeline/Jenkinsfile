pipeline {
  agent any

  environment {
    AWS_DEFAULT_REGION = "us-east-1"
    AWS_ACCOUNT_ID = "325117588880"
    ECR = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
    FLUTTER_DOCKER_IMAGE = "app-flutter-base"
    FLUTTER_DOCKER_IMAGE_VERSION = "1.5"
    FLUTTER_BASE_IMAGE_URI = "${ECR}/${FLUTTER_DOCKER_IMAGE}:${FLUTTER_DOCKER_IMAGE_VERSION}"
  }

  stages {
    stage('ECR Login') {
      steps {
        sh '''
          aws ecr get-login-password --region ${AWS_DEFAULT_REGION} |docker login --username AWS --password-stdin ${ECR}
        '''
      }
    }

    stage('Stage Pre Release - Build') {
      parallel {
        stage('Stage Pre Release - Build IOS') {
          steps {
            withCredentials([
              gitUsernamePassword(credentialsId: 'github-creds', gitToolName: 'git-tool'),
              string(credentialsId: 'APP_FLUTTER_IOS_APP_STORE_CONNECT_TEAM_ID', variable: 'APP_FLUTTER_IOS_APP_STORE_CONNECT_TEAM_ID'),
              string(credentialsId: 'APP_FLUTTER_IOS_APPLE_ISSUER_ID', variable: 'APP_FLUTTER_IOS_APPLE_ISSUER_ID'),
              string(credentialsId: 'APP_FLUTTER_IOS_DEVELOPER_APP_ID', variable: 'APP_FLUTTER_IOS_DEVELOPER_APP_ID'),
              string(credentialsId: 'APP_FLUTTER_IOS_APPLE_KEY_ID', variable: 'APP_FLUTTER_IOS_APPLE_KEY_ID'),
              string(credentialsId: 'APP_FLUTTER_IOS_DEVELOPER_PORTAL_TEAM_ID', variable: 'APP_FLUTTER_IOS_DEVELOPER_PORTAL_TEAM_ID'),
              string(credentialsId: 'APP_FLUTTER_IOS_GH_PAT', variable: 'APP_FLUTTER_IOS_GH_PAT'),
              string(credentialsId: 'APP_FLUTTER_IOS_GIT_AUTHORIZATION', variable: 'APP_FLUTTER_IOS_GIT_AUTHORIZATION'),
              string(credentialsId: 'APP_FLUTTER_IOS_MATCH_PASSWORD', variable: 'APP_FLUTTER_IOS_MATCH_PASSWORD'),
              string(credentialsId: 'APP_FLUTTER_IOS_TEMP_KEYCHAIN_PASSWORD', variable: 'APP_FLUTTER_IOS_TEMP_KEYCHAIN_PASSWORD'),
              string(credentialsId: 'APP_FLUTTER_IOS_FASTLANE_APPLE_ID', variable: 'APP_FLUTTER_IOS_FASTLANE_APPLE_ID'),
              string(credentialsId: 'APP_FLUTTER_IOS_APPLE_KEY_CONTENT', variable: 'APP_FLUTTER_IOS_APPLE_KEY_CONTENT')
            ]) {
              sh '''
                echo buildei a versão IOS
              '''
            }
          }
        }

        stage('Stage Pre Release - Build Android') {
          agent {
            docker {
              alwaysPull  true
              registryUrl "https://${ECR}"
              image "${FLUTTER_BASE_IMAGE_URI}"
              args "--user 0 --cpus=2 --memory=2048MB -v ${LINUX_TEMP_BUILD_DIR}:${LINUX_TEMP_BUILD_DIR}"
            }
          }

          steps {
            sh '''
              export APP_PACKAGE_NAME="br.com.confidencecambio.payments.tst"
              export FIREBASE_APP_ID="1:21677159273:android:0996399e7afae425"
              export FIREBASE_GROUPS="android---tst"
              echo buildei a versão Android
            '''
          }
        }
      }
    }
  }

  post {
    always {
      sh 'echo release finished'
      sh 'sudo chown -R jenkins:jenkins .*'
    }

    success {
      echo "release success"
    }

    failure {
      echo "release failed"
    }
  }
}